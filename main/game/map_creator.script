require "assets/libs/game"


function init(self)
	local tile_types = {
		"plains",
		"forest",
		"mountains"
	}
	local tile_count = table.maxn(tile_types)
	

	self.map_width = 10
	self.map_height = 10
	self.map = {height = self.height, width = self.width, tiles = {}}
	self.tile_ids = {}
	

		game.print_map()
	
	
	msg.post("camera", "sending_map_size", {self.map_width,self.map_height,100})
	msg.post("background", "sending_map_size", {self.map_width,self.map_height,100})

	self.received_tile_data_count = 0
end



create_tile_properties = {}
function create_tile_properties.forest()
	local tile_properties = {
		tile_type = "forest",
		sprite = "#forest"
	}
	
	return tile_properties
end



function create_tile_properties.plains()
	local tile_properties = {
		tile_type = "plains",
		sprite = "#plains"
	}
	
	return tile_properties
end



function create_tile_properties.mountains()
	local tile_properties = {
		tile_type = "mountains",
		sprite = "#mountains"
	}
	
	return tile_properties
end



function send_map_to_server(map, url)

	local body = json.encode(map)
	print(body)
	http.request(
	url,
	"POST",
	function(self, id, response)
		print("Response status:", response.status)
		print("Response body:", response.response)
	end,
	{["Content-Type"] = "application/json"},
	body
)
end



function on_message(self, message_id, message, sender)
	if message_id == hash("sending_tile_properties") then
		self.received_tile_data_count = self.received_tile_data_count + 1
		self.map["tiles"][message.x][message.y] = message.properties
		if self.received_tile_data_count == self.map_width * self.map_height then
			send_map_to_server(self.map, "http://127.0.0.1:8000/post_map_data")
		end
	end
end